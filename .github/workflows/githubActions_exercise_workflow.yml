name: githubActions_exercise_workflow
on: [push]
jobs:
  Linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: run linter
        run: npm install && npm run lint

  Cypress_job:
    needs: Linter_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: run cypress
        uses: cypress-io/github-action@v2
        id: cypress_step
        if: always()
        with:
          build: npm run build
          start: npm start
      - name: put into result.txt
        if: always()
        shell: bash
        run: echo ${{ steps.cypress_step.outcome }} > result.txt
      - name: upload artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: result.txt
  
  Add_badge_job:
    needs: Cypress_job
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: result
      - name: generate output
        id: genoutput
        run: echo "::set-output name=cypress_outcome::$(cat result.txt)"
      - name: modify readme
        uses: ./.github/actions/badge_action
        with:
          result: ${{ steps.genoutput.outputs.cypress_outcome }}
      - name: commit changes on readme
        run: |
          git config user.email "actionsbot@github.com"
          git config user.name "actionsbot"
          if [ -n "$(git status --porcelain)" ]; then 
          git add .
          git commit -m "Change readme badge"
          git remote set-url origin https://cjuan-code:${{ secrets.TOKEN }}@github.com/cjuan-code/githubActions_exercise.git
          git push
          fi
          
  
  Deploy_job:
    needs: Cypress_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: vercel deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
  
  Notification_job:
    needs: [Linter_job, Cypress_job, Add_badge_job, Deploy_job]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: send mail
        uses: ./.github/actions/send_mail
        with:
          postmail_secret: ${{ secrets.POSTMAIL_SECRET }}
          linter_result: ${{ needs.Linter_job.result }}
          cypress_result: ${{ needs.Add_badge_job.result }}
          add_badge_result: ${{ needs.Add_badge_job.result }}
          deploy_result: ${{ needs.Deploy_job.result }}

